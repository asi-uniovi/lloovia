# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

include: "Snakefile.definitions"
import os,sys,inspect
currentdir = os.path.dirname(
    os.path.abspath(inspect.getfile(inspect.currentframe()))
        )
sys.path.insert(0, os.path.join(currentdir, "src/solve"))
sys.path.insert(0, os.path.join(currentdir, "src/visualization"))
sys.path.insert(0, os.path.join(currentdir, "src/data"))

interim_folder = "/tmp/interim"
#interim_folder = "data/interim"
phase_I_binning_experiments = expand("%s/phaseI/case_{case}_level_{level}_bins_{bins}.pickle" % interim_folder, case=CASES, level=LEVELS, bins=BINS)
phase_I_binning_experiments.extend(expand("%s/phaseI/case_{case}_level_{level}_nobins.pickle" %
   interim_folder, case=CASES, level=LEVELS))
instances_for_synthetic_experiments = "%s/instances_for_synthetic_experiments.pickle" % interim_folder


rule run_example:
     input: phase_I_binning_experiments

rule create_instances_for_synthetic_experiments:
    input:  "data/processed/benchmarks_wikibench.csv", "data/processed/providers_amazon_data.csv"
    output: instances_for_synthetic_experiments
    message: "Creating instances for synthetic experiments"
    run:
        import create_infrastructure_for_experiments as experiments
        experiments.create_instances(input[0], input[1], output[0])

# rule kk:
#     input: instances_for_synthetic_experiments
#     output: phase_I_binning_experiments
#     message: "Fake rule. Not yet implemented"
    
rule perform_single_experiment:
    input: instances_for_synthetic_experiments, "data/processed/traces_synthetic_{case}_LTWP.csv"
    output: "%s/phaseI/case_{case}_level_{level}_bins_{bins}.pickle" % interim_folder  
    message: "Performing experiment {wildcards.case} {wildcards.level}, Phase I with {wildcards.bins} bins"
    run:
       import experiments
       experiments.perform_experiment_phase_I(
            infrastructure_file=input[0], workload_file=input[1],
            level=int(wildcards.level),
            max_bins=int(wildcards.bins),
            output_file=output[0]
            )

rule perform_single_experiment_nobins:
    input: instances_for_synthetic_experiments, "data/processed/traces_synthetic_{case}_LTWP.csv"
    output: "%s/phaseI/case_{case}_level_{level}_nobins.pickle" % interim_folder  
    message: "Performing experiment {wildcards.case} {wildcards.level}, Phase I without binning"
    run:
       import experiments
       experiments.perform_experiment_phase_I(
            infrastructure_file=input[0], workload_file=input[1],
            level=int(wildcards.level),
            max_bins=None,
            output_file=output[0],
            frac_gap=None,
            max_seconds=60*60
            )
    
